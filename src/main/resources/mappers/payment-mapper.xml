<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="payment">
		
		<select id="resList" resultType="PaymentReqDto">
						
				select 
				 (select model from vehicle where idx=tb_p.VEHICLE_IDX ) AS vehicle_model
			    ,(select name from LOCATION where idx=tb_p.RETURN_LOCATION) AS return_location_name
			    ,(select name from LOCATION where idx=tb_p.RENT_LOCATION) AS rent_location_name
			    ,tb_p.* 
			    from payment tb_p
			    where MEMBER_IDX in (select idx from member where username=#{username})
    
		
 		</select>
	
		<select id="ReservationOne" resultType="PaymentReqDto" >
			 SELECT * FROM payment WHERE idx = #{idx}
		</select>
	
		<update id="deleteRes">
			update payment set state = 1 where idx = #{idx}
		</update>
	
	<delete id="resDelete" parameterType="int">
		DELETE FROM payment WHERE IDX = #{IDX}
	</delete>
	
	<select id="selectNoneM" resultType="PaymentReqDto">
	select * from NMEMPAYMENT where payment_idx =#{idx} and name =#{name} and PHONE_NUMBER =  #{phoneNumber}
	</select>
	
	<select id="noneMemberRes" resultType="PaymentReqDto">
	
	select * from payment where idx in ( select payment_idx from NMEMPAYMENT where payment_idx = #{idx} )
	</select>
	
	
	<insert id="insertPayInfo" parameterType="PaymentReqDto" >
		insert into payment 
		(IDX, STATE, MEMBER_IDX, VEHICLE_IDX, INSURANCE_IDX, COUPON_IDX, FINAL_PRICE, PAID_TIME, START_DATE, END_DATE, CANCEL_DATE, RENT_LOCATION,RETURN_LOCATION, IS_MEMBER )
		values (payment_seq.nextval,0 ,#{memberIdx},#{vehicleIdx}, #{insurance},0, #{finalprice}, #{paidtime}, #{startDate}, #{endDate},'',#{rentLocation},#{returnLocation}, #{ismember})
	
	</insert>
		
	<insert id ="insertNmemInfo" parameterType="PaymentReqDto" >
		INSERT INTO NMEMPAYMENT
		(PAYMENT_IDX, NAME, BIRTH, PHONE_NUMBER, LICENSE, EMAIL) 
		VALUES (payment_seq.currval, #{name}, #{birth}, #{phone}, #{license}, #{email})
	</insert>

	<select id="reservByModel" resultType="adminReservByModelRespDto">
		SELECT *
		  FROM (SELECT ROWNUM RNUM, PAY.*
		          FROM (SELECT V.MODEL, COUNT(*) CNT, SUM(FINAL_PRICE) SUM
                          FROM PAYMENT P INNER JOIN VEHICLE V ON P.VEHICLE_IDX = V.IDX
                         GROUP BY V.MODEL ORDER BY SUM DESC) PAY)
         WHERE RNUM BETWEEN 1 AND 5
	</select>
	
	<select id="selectList" resultType="adminReservRespDto">
		SELECT *
		  FROM (SELECT ROWNUM AS RNUM, IDX, IS_MEMBER, STATE, FINAL_PRICE, PAID_TIME, CANCEL_DATE, START_DATE, END_DATE
		          FROM PAYMENT ORDER BY IDX DESC)
         WHERE RNUM BETWEEN #{start} AND #{end}
	</select>
	<select id="count" resultType="_int">
		SELECT COUNT(*) FROM PAYMENT
	</select>
	<select id="recentMonth" resultType="adminStatisticsRecentMonthDto">
		SELECT *
		  FROM (SELECT (SELECT LOCATION.IDX FROM LOCATION WHERE LOCATION.IDX = PAYMENT.RENT_LOCATION) 
                               AS IDX , EXTRACT(MONTH FROM PAID_TIME) AS PAID_TIME, FINAL_PRICE FROM PAYMENT)
                         PIVOT (SUM(FINAL_PRICE) FOR IDX IN (1 AS LOC1, 2 AS LOC2, 3 AS LOC3, 4 AS LOC4, 5 AS LOC5))
         WHERE PAID_TIME >= (SELECT EXTRACT(MONTH FROM SYSDATE) - 2 FROM DUAL)
         ORDER BY PAID_TIME
	</select>
	<select id="monthList" resultType="map">
		SELECT EXTRACT(MONTH FROM PAID_TIME) || 'ì›”' AS MONTH
		  FROM PAYMENT GROUP BY EXTRACT(MONTH FROM PAID_TIME)
		HAVING EXTRACT(MONTH FROM PAID_TIME) >= (SELECT EXTRACT(MONTH FROM SYSDATE) FROM DUAL) - 2
         ORDER BY MONTH
	</select>
	
</mapper>
